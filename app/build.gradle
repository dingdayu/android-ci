apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 26

    def versionString, versionBuild  // 版本字符串和版本号
    def runTasks = gradle.startParameter.taskNames  // 获取gradle的启动任务列表
    if (':app:assembleRelease' in runTasks || 'assembleRelease' in runTasks) {  // 检查是否为Release构建
        def versionPropsFile = file('version.properties')  // 检查version.properties文件是否存在
        if (!versionPropsFile.canRead()) {
            throw new Exception('Could not read version.properties!')
        }
        // 加载version.properties
        def Properties versionProps = new Properties()
        versionProps.load(new FileInputStream(versionPropsFile))
        def versionMajor, versionMinor, versionPatch
        if (System.getenv('GITLAB_CI') == null) {  // 判断是否在Gitlab CI中运行
            println '[VERSIONING] Build manually...'
            // 从version.properties中读取所有版本信息
            versionMajor = versionProps['VERSION_MAJOR']
            versionMinor = versionProps['VERSION_MINOR']
            versionPatch = versionProps['VERSION_PATCH']
            versionBuild = versionProps['VERSION_BUILD'].toInteger()
        } else {
            println '[VERSIONING] Build automatically...'
            // 获取tag字符串
            def tag = System.getenv('CI_COMMIT_TAG')
            if (tag == null) {
                throw new Exception('[VERSIONING] Only tagged build is supported in automatic build')
            }
            // 从tag字符串中提取版本号
            (versionMajor, versionMinor, versionPatch) = tag.trim().replace('v', '').split('\\.')
            // 从CI_PEPELINE_ID获取Build，并加上一个值以避免和现有版本冲突
            versionBuild = System.getenv('CI_PIPELINE_ID').toInteger() + versionProps['VERSION_CI_BASE_BUILD'].toInteger()
        }
        // 构建versionString
        versionString = "${versionMajor}.${versionMinor}.${versionPatch}"
    } else {  // Debug下默认填充versionString和versionBuild
        versionBuild = Integer.MAX_VALUE
        versionString = '0.0.0'
    }

    defaultConfig {
        applicationId "com.dingdayu.hello"
        minSdkVersion 15
        targetSdkVersion 26
        versionCode versionBuild
        versionName versionString
        multiDexEnabled true
        archivesBaseName = "app-${versionString}-${versionBuild}"  // 设置APK文件名
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation"org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"
    implementation 'com.android.support:appcompat-v7:26.1.0'
    implementation 'com.android.support:design:26.1.0'
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'com.android.support.test:runner:1.0.2'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.2'
}
